<h1>Starting the XAML coding</h1>

<p>
XAML is  is a declarative markup language. In Microsoft Visual Studio XAML code will be displayed in two different windows, the XAML and Designer windows. The XAML window is where simple coding is done on the instrument. The designer window displays what the instrument will look like and this window can be used to manipulate the instrument. They are interconnected and altering something in one window will automatically update the other window. For example, if you drag a shape in the designer window to a new location, the location will reflect that change in the XAML code.  For more overview of what the Designer window provides click  <a target="_blank" href="http://msdn.microsoft.com/en-us/library/hh921077.aspx">here</a>.  For more overview of what the XMAL window provides click  <a target="_blank" href="http://msdn.microsoft.com/en-us/library/hh700354.aspx">here</a>.  Additional information on the general format of the XAML click <a target="_blank" href="http://msdn.microsoft.com/en-us/library/ms752059(v=vs.110).aspx">here</a>.  The picture below shows the designer window in the top half (checkered area) and the XAML window in the bottom half. 
<img src="/../../instrument_example/images/design&xaml.jpg" name= "picture" width="660">. <br>
This section will continue with renaming your XAML
 file and other preliminary steps.
 
<br><br>
To rename your file:
<ol> <!--"--> 
<li>In "Solution Explorer" expand "Your Instrument's name" project</li>
<li>Right click on "MainWindow.xaml"  </li>
<li>Select Rename</li>
<li>Type in the highlighted area "Your Instrument's name"</li>
 </ol>
For the rest of the set up:
<ol> <!--"--> 
<li>In "Solution Explorer" expand "Your Instrument's name"  </li>
<li>Double click on ""Your Instrument's name".xaml"</li>
<li>The XAML and Design Window are now open.
 Edit the XAML window to read (Substitute "Your Instrument's name" for "RibbonCompass" on the first line):</li>
 </ol>
<img src="/../../instrument_example/images/XamlTop.jpg" name= "picture" width="660">

Between the "&lt;Canvas&gt;" declaration and its closing ("&lt;/Canvas&gt;") is where one writes
 their code. The "Canvas" class defines an area within
 which you can explicitly position child objects, using
 coordinates that are relative to the Canvas' area.  Click <a target="_blank" href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.canvas.Aspx">here</a> for more on the "Canvas" class.
 Important to note: Height="10" Width="130" are the
  visible dimensions once the instrument is running! You will want to change your instrument's dimensions to fit your instrument's goals. If you're are going for a square, set the height and width to eachother.  The raw dimensions shown in Cockpit can be altered by the C# code, but the 10/130 ratio will not change. The Height and Width located in the above image are shown in the Designer window as a thin gray rectangle. In the image below, the thin gray rectangle displays what will actually be displayed by the instrument. As seen in the image, it is fine to go off edge of the defined dimensions and is necessary in the Ribbon Compass example.<img src="/../../instrument_example/images/instrumentWidth.jpg" name= "picture" width="660">
</p>